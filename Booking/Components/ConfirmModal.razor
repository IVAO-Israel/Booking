@if (IsVisible)
{
    <div class="modal fade show d-block" tabindex="-1" aria-modal="true" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">@Title</h5>
                    <button type="button" class="btn-close" aria-label="Close" @onclick="Cancel"></button>
                </div>
                <div class="modal-body">
                    <p>@Message</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="Cancel">@CancelButtonText</button>
                    <button type="button" class="btn btn-primary" @onclick="Confirm">@ConfirmButtonText</button>
                </div>
            </div>
        </div>
    </div>
}

@code {
    private bool IsVisible { get; set; }
    [Parameter]
    public string Title { get; set; } = "Confirm";
    [Parameter]
    public string Message { get; set; } = "Are you sure?";
    [Parameter]
    public string ConfirmButtonText { get; set; } = "Yes";
    [Parameter]
    public string CancelButtonText { get; set; } = "No";
    [Parameter]
    public object? Object { get; set; }
    [Parameter]
    public Action? OnConfirm { get; set; }
    [Parameter]
    public Action? OnCancel { get; set; }
    public void Show(string? title = null, string? message = null, object? obj = null)
    {
        Title = title ?? Title;
        Message = message ?? Message;
        Object = obj;
        IsVisible = true;
        StateHasChanged();
    }
    private void Confirm()
    {
        IsVisible = false;
        StateHasChanged();
        if(OnConfirm is not null)
        {
            OnConfirm.Invoke();
        }
    }
    private void Cancel()
    {
        IsVisible = false;
        StateHasChanged();
        if(OnCancel is not null)
        {
            OnCancel.Invoke();
        }
    }
}